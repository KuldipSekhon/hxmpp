  _   _   _   _   _  
 / \ / \ / \ / \ / \ 
( H | X | M | P | P )
 \_/ \_/ \_/ \_/ \_/ 
=====================
HXMPP is a haXe library for creating XMPP based clients and services.
The library exists in two namespaces:
* xmpp: creation and manipulation of XMPP data.
* jabber: creation and handling of XMPP data streams between jabber entities.



SOURCE
------
http://github.com/tong/hxmpp
git://github.com/tong/hxmpp.git



USAGE
-----
http://github.com/tong/hxmpp.examples



COMPILER FLAGS
--------------
* XMPP_DEBUG	Print XMPP transfer
* JABBER_DEBUG	Print verbose debug information
* JABBER_SOCKETBRIDGE	Use a flash socket bridge as stream connection for the javascript target
* JABBER_COMPONENT	Required to build server-components
* air  Required to use native air2 sockets


NDLL
----
The hxmpp.ndll included is only required if you use one of the following extensions:
* jabber.BOB
* jabber.EntityCapabilities
* jabber.client.NonSASLAuth
* jabber.component.Stream



TLS
---
Currently only legacy TLS on port 5223 is supported.
* neko:
	Link to hxssl project (git://83.64.208.21/hxssl.git)
* flash:
	-cp ../../hxmpp/tls
	-swf-lib ../../hxmpp/util/tls/tls.swf
* cpp:
	no support right now
* js:
	Use the TLS flash-socketbridge



BOSH
----
BOSH essentially provides a "drop-in" alternative to a long-lived, bidirectional TCP connection using a request-response mechansim over HTTP.
To use it you have to connect your client to the BOSH adress of your jabber server.
Your webserver doesnâ€™t know about your jabber server .. you have to setup a proxy to forward requests: 

# Activate mod_proxy apache module
sudo ln -s /etc/apache2/mods-available/proxy.load /etc/apache2/mods-enabled/
# Add following line to proxy.load to activate the proxy-http module
LoadModule proxy_http_module /usr/lib/apache2/modules/mod_proxy_http.so
# Add the proxy directive to the host settings in your http.conf
# This will proxy requests: htp://127.0.0.1/xmpp -> http://127.0.0.1:7070/http-bind/
<VirtualHost *:80>
	...
	ProxyRequests Off
	ProxyPass /xmpp http://127.0.0.1:7070/http-bind/
	ProxyPassReverse /xmpp http://127.0.0.1:7070/http-bind/
	...
</VirtualHost>

# Restart apache
sudo /etc/init.d/apache2 restart

# Now you can pass in the path to the constructor of the jabber.BOSHConection class:
var cnx = new BOSHConnection( "domain.net", "127.0.0.1/xmpp/" );



NODE.JS
-------
HXMPP has experimental support for node.js.
Use the type signatures from:
http://github.com/blackdog66/bdog-stdhx



AIR2
----
HXMPP supports native, secure and unsecure adobe air2 socket connections.
Add 'air' as compiler flag.
Get the required external classes from: http://disktree.spektral.at/git/?a=summary&p=hxair



XEPS SUPPORTED
--------------
* 0004 DataForms
* 0012 LastActivity
*** 0016 PrivacyLists
* 0030 ServiceDiscovery
** 0045 MUChat
* 0049 Private XML Storage
* 0054 VCardTemp
*** 0060 PubSub
* 0071 XHTML-IM
* 0077 In-Band Registration
* 0082 XMPP Date and Time Profiles
* 0085 ChatStateNotification
* 0092 SoftwareVersion
* 0106 JID Escaping
* 0114 Jabber Component Protocol
** 0115 Entity Capabilities
* 0124 BOSH
** 0163 PersonalEvent 
** 0191 Simple Communications Blocking
* 0199 Ping 
** 0202 EntityTime
* 0203 DelayedDelivery
* 0206 BOSH
*** 0232 Bits of Binary

** XEP-xxxx: Linked Process Protocol
** XEP-xxxx: Jingle RTMP Transport



HACKERS
-------
This project accepts and *encourages* contributions.



AUTHOR
------
xmpp://tong@jabber.spektral.at

